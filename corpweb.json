{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {

    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },
    
    "KeyPair": {
        "Description" : "Name of an existing EC2 keypair to enable SSH access to instance",
        "Type" : "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "must be the same of an existing EC2 KeyPair."
    },
    
    "YourIp" : {
        "Description" : "The current CIDR IP address of your workstation. http://checkip.amazonaws.com/",
        "Type" : "String",
        "Default": "74.32.186.23/32"
    }
  },
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringVpc"
          }
        ]
      }
    },
    
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "InternetGateway"
      ]
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : "us-east-1a",
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet1"
          }
        ]
      }
    },
    "PublicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : "us-east-1b",
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet2"
          }
        ]
      }
    },
    "PublicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "SubnetId": {
          "Ref": "PublicSubnet2" }
      }
    },
    "Web1": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [
          { "Ref": "WebserverSG"}
        ],
        "KeyName" : { "Ref" : "KeyPair" },
        "Tags" : [
          { "Key": "Name",
            "Value": "web1"
          }
        ]
      }
    },
    "Web2": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [
          { "Ref": "WebserverSG"}
        ],
        "KeyName" : { "Ref" : "KeyPair" },
        "Tags" : [
          { "Key": "Name",
            "Value": "web2"
          }
        ]
      }
    },
    
      "EngineeringLB": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
          "Scheme" : "internet-facing",
          "Name" : "EngineeringLB",
          "SecurityGroups" : [{"Ref" : "LoadBalancerSG"}],
          "Subnets" : [{"Ref" : "PublicSubnet1"}, {"Ref" : "PublicSubnet2"}],
          "Type" : "application"
        }
    },
      "EngineeringWebservers": {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
          "Name" : "EngineeringWebservers",
          "VpcId" : {"Ref" : "EngineeringVpc"},
          "Port" : 80,
          "Protocol" : "HTTP",
          "HealthCheckPath" : "/",
          "Targets" : [{"Id" : {"Ref" : "Web1"}, "Port" : 80}, {"Id" : {"Ref" : "Web2"}, "Port" : 80}],
          "Tags" : [{ "Key" : "Name", "Value" : "EngineeringWebservers" },
              { "Key" : "Stack", "Value" : { "Ref": "AWS::StackName" } }]
        }
    },
      "EngineeringWebserversListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
          "DefaultActions" : [
                { "Type" : "forward", "TargetGroupArn" :
                    { "Ref" : "EngineeringWebservers"} }],
          "LoadBalancerArn" : {"Ref" : "EngineeringLB"},
          "Port" : 80,
          "Protocol" : "HTTP"
        }
    },
      "LoadBalancerSG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": {
              "Ref": "EngineeringVpc"
          },
          "GroupDescription": "Security group rules for webserver host.",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      
    "WebserverSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "GroupDescription": "Security group rules for webserver host.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIp"}
          }
        ]
      }
    }
  },
  "Outputs" : {
          "WebUrl" : {
              "Description" : "Load balancer DNS",
              "Value" : { "Fn::GetAtt": [ "EngineeringLB", "DNSName" ] }
          }
  }
}

